{
  "name": "TastyTrade SDK with Claude Code",
  "build": {
    "dockerfile": "Dockerfile",
    "context": "."
  },
  "customizations": {
    "vscode": {
      "extensions": [
        // Claude Code Integration
        "anthropic.claude-code",

        // Python Development
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.debugpy",
        "ms-python.mypy-type-checker",

        // Jupyter & Data Science
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.jupyter-renderers",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.vscode-jupyter-powertoys",
        "ms-toolsai.vscode-jupyter-slideshow",

        // Docker & Infrastructure
        "ms-vscode-remote.remote-containers",
        "ms-vscode-remote.remote-ssh",
        "ms-vscode-remote.remote-ssh-edit",

        // Git & Version Control
        "eamodio.gitlens",
        "donjayamanne.githistory",
        "github.vscode-pull-request-github",
        "huizhou.githd",
        "mhutchie.git-graph",

        // Code Quality & Formatting
        "charliermarsh.ruff",
        "esbenp.prettier-vscode",
        "usernamehw.errorlens",
        "visualstudioexptteam.vscodeintellicode",
        "visualstudioexptteam.intellicode-api-usage-examples",

        // Documentation & Comments
        "aaron-bond.better-comments",
        "njpwerner.autodocstring",
        "davidanson.vscode-markdownlint",
        "shd101wyy.markdown-preview-enhanced",
        "yzhang.markdown-all-in-one",
        "bierner.markdown-mermaid",

        // Data & File Utilities
        "mohsen1.prettify-json",

        // Development Tools
        "alefragnani.bookmarks",
        "bodil.prettier-toml",
        "tamasfe.even-better-toml",
        "redhat.vscode-yaml",
        "mikestead.dotenv",
        "postman.postman-for-vscode",

        "ibm.output-colorizer",
        "ms-vscode.remote-explorer",
        "ms-vscode.remote-server",

        // Specialized Tools
        "kevinrose.vsc-python-indent",
        "inferrinizzard.prettier-sql-vscode"
      ],
      "settings": {
        "files.autoSave": "afterDelay",
        "files.autoSaveDelay": 1000,

        // Terminal Configuration for Claude Code
        "terminal.integrated.env.linux": {
          "VIRTUAL_ENV": "/workspace/.venv",
          "PATH": "/workspace/.venv/bin:${env:PATH}"
        },
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/bin/bash",
            "env": {
              "workspaceFolder": "${workspaceFolder}"
            }
          }
        },
        "terminal.integrated.defaultProfile.linux": "bash",

        // Python Configuration
        "[python]": {
          "editor.formatOnType": true,
          "editor.formatOnSave": true,
          "editor.defaultFormatter": "charliermarsh.ruff",
          "editor.codeActionsOnSave": {
            "source.fixAll.ruff": "always",
            "source.organizeImports.ruff": "always"
          }
        },
        "python.defaultInterpreterPath": "/workspace/.venv/bin/python",
        "python.envFile": "${workspaceFolder}/.env",
        "python.createEnvironment.contentButton": "show",
        "python.experiments.enabled": false,
        "python.languageServer": "Pylance",
        "python.terminal.shellIntegration.enabled": true,
        "python.analysis.extraPaths": [
          "/workspace/src",
          "/workspace/.venv/lib/python3.11/site-packages"
        ],
        "python.terminal.activateEnvInCurrentTerminal": true,
        "python.testing.pytestEnabled": true,
        "python.testing.pytestArgs": ["unit_tests"],
        "python.testing.unittestEnabled": false,

        // Documentation Configuration
        "autoDocstring.docstringFormat": "numpy",
        "autoDocstring.includeName": true,
        "autoDocstring.logLevel": "Debug",
        "markdownlint.config": {
          "MD013": false,
          "MD029": false,
          "MD033": false
        },

        // Tool Configuration
        "postman.settings.dotenv-detection-notification-visibility": false,
        "pylint.enabled": false,
        "ruff.enable": true,
        "ruff.organizeImports": true,

        // Pylance / Pyright performance & clarity: exclude heavy, non-source dirs
        "python.analysis.exclude": [
          "**/logs",
          "**/unit_tests",
          "**/notebooks",
          "**/__pycache__",
          "deploy",
          ".venv"
        ],
        // Avoid FS watcher overload on large / noisy directories
        "files.watcherExclude": {
          "**/logs/**": true,
          "**/unit_tests/**": true,
          "**/notebooks/**": true,
          "**/.venv/**": true,
          "**/__pycache__/**": true
        },
        // Ensure rich inference even without explicit stubs
        "python.analysis.useLibraryCodeForTypes": true,
        "python.analysis.autoImportCompletions": true,

        // Claude Code specific settings
        "claude-code.autoStart": false,
        "claude-code.permissions.skipConfirmation": false
      },
      "launch": {
        "configurations": [
          {
            "name": "Python: Live Environment",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "envFile": "${workspaceFolder}/.env",
            "cwd": "${workspaceFolder}",
            "args": ["--live"]
          },
          {
            "name": "Python: Test Environment",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "envFile": "${workspaceFolder}/.env",
            "cwd": "${workspaceFolder}",
            "args": []
          },
          {
            "name": "DXLink Startup Script",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/src/tastytrade/scripts/dxlink_startup.py",
            "console": "integratedTerminal",
            "envFile": "${workspaceFolder}/.env",
            "cwd": "${workspaceFolder}",
            "args": ["--debug"]
          }
        ]
      }
    }
  },

  // Workspace-specific setup after container creation
  "postCreateCommand": "chmod +x /workspace/.devcontainer/setup.sh && /workspace/.devcontainer/setup.sh",

  "remoteUser": "vscode",
  "runArgs": ["--network=tastytrade_sdk_internal_net"],

  // Enhanced mounts for Claude Code configuration and session persistence
  "mounts": [
    "source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached",
    "source=${localEnv:HOME}/.claude,target=/home/vscode/.claude,type=bind,consistency=cached"
  ],

  // Port forwarding for development services
  "forwardPorts": [8000, 8086, 3000, 9090],
  "portsAttributes": {
    "8000": {
      "label": "FastAPI Server",
      "onAutoForward": "notify"
    },
    "8086": {
      "label": "InfluxDB",
      "onAutoForward": "ignore"
    },
    "3000": {
      "label": "Dashboard",
      "onAutoForward": "notify"
    },
    "9090": {
      "label": "Prometheus",
      "onAutoForward": "ignore"
    }
  },

  "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind",
  "workspaceFolder": "/workspace",

  // Features for additional capabilities (removed Node.js since it's in Dockerfile)
  "features": {
    "ghcr.io/devcontainers/features/git:1": {
      "ppa": false
    }
  },

  // Environment variables
  "remoteEnv": {
    "PYTHONPATH": "/workspace/src:${env:PYTHONPATH}",
    "TASTYTRADE_ENV": "development",
    "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
    "UV_LINK_MODE": "copy"
  }
}

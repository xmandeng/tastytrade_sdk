{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 5,
  "links": [],
  "liveNow": true,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "becpny17ugz5sd"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "points",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 1.01,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "custom.pointSize",
                "value": 1.1
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "prevHigh"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "prevLow"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "prevClose"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#b8b8b8",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "open_5mHi"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-green",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.pointSize",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "open_5mLo"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-green",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.pointSize",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "open_15mHi"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "open_15mLo"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 15,
        "w": 18,
        "x": 0,
        "y": 0
      },
      "id": 3,
      "options": {
        "candleStyle": "candles",
        "colorStrategy": "open-close",
        "colors": {
          "down": "red",
          "up": "green"
        },
        "fields": {
          "close": "close",
          "high": "high",
          "low": "low",
          "open": "open"
        },
        "includeAllFields": true,
        "legend": {
          "calcs": [],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "mode": "candles",
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "becpny17ugz5sd"
          },
          "query": "from(bucket: \"tastytrade\")\n  |> range(start: -2d)  // Adjust time range as needed\n  |> filter(fn: (r) => r._measurement == \"CandleEvent\")\n  |> filter(fn: (r) => r.eventSymbol == \"SPX{=5m}\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> keep(columns: [\"_time\", \"open\", \"high\", \"low\", \"close\", \"volume\"])\n  |> sort(columns: [\"_time\"], desc: false)",
          "refId": "Candle Plot"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "becpny17ugz5sd"
          },
          "hide": false,
          "query": "import \"date\"\nfrom(bucket: \"tastytrade\")\n|> range(start: -3d)\n|> filter(fn: (r) =>\n r._measurement == \"CandleEvent\" and\n r.eventSymbol == \"SPX{=d}\"\n)\n|> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n|> keep(columns: [\"_time\", \"prevHigh\"])\n|> rename(columns: {\"prevHigh\": \"_value\"})\n|> aggregateWindow(every: 1m, fn: last, createEmpty: true)\n|> fill(usePrevious: true)\n// Calculate time elapsed since midnight UTC in nanoseconds\n|> map(fn: (r) => ({\n r with\n remainder: int(v: r._time) - int(v: date.truncate(t: r._time, unit: 1d))\n }))\n// Filter for 14:30–21:00 UTC (9:30–16:00 EST in winter)\n|> filter(fn: (r) =>\n r.remainder >= int(v: 14h30m) and r.remainder < int(v: 21h)\n)\n|> drop(columns: [\"remainder\"])\n|> drop(columns: [\"_start\", \"_stop\"])\n|> rename(columns: {\"_value\": \"prev_Hi\"})",
          "refId": "prevHigh"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "becpny17ugz5sd"
          },
          "hide": false,
          "query": "import \"date\"\nfrom(bucket: \"tastytrade\")\n|> range(start: -3d)\n|> filter(fn: (r) =>\n r._measurement == \"CandleEvent\" and\n r.eventSymbol == \"SPX{=d}\"\n)\n|> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n|> keep(columns: [\"_time\", \"prevClose\"])\n|> rename(columns: {\"prevClose\": \"_value\"})\n|> aggregateWindow(every: 1m, fn: last, createEmpty: true)\n|> fill(usePrevious: true)\n// Calculate time elapsed since midnight UTC in nanoseconds\n|> map(fn: (r) => ({\n r with\n remainder: int(v: r._time) - int(v: date.truncate(t: r._time, unit: 1d))\n }))\n// Filter for 14:30–21:00 UTC (9:30–16:00 EST in winter)\n|> filter(fn: (r) =>\n r.remainder >= int(v: 14h30m) and r.remainder < int(v: 21h)\n)\n|> drop(columns: [\"remainder\"])\n|> drop(columns: [\"_start\", \"_stop\"])\n|> rename(columns: {\"_value\": \"prev_Close\"})",
          "refId": "PrevClose"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "becpny17ugz5sd"
          },
          "hide": false,
          "query": "import \"date\"\nfrom(bucket: \"tastytrade\")\n|> range(start: -3d)\n|> filter(fn: (r) =>\n r._measurement == \"CandleEvent\" and\n r.eventSymbol == \"SPX{=d}\"\n)\n|> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n|> keep(columns: [\"_time\", \"prevLow\"])\n|> rename(columns: {\"prevLow\": \"_value\"})\n|> aggregateWindow(every: 1m, fn: last, createEmpty: true)\n|> fill(usePrevious: true)\n// Calculate time elapsed since midnight UTC in nanoseconds\n|> map(fn: (r) => ({\n r with\n remainder: int(v: r._time) - int(v: date.truncate(t: r._time, unit: 1d))\n }))\n// Filter for 14:30–21:00 UTC (9:30–16:00 EST in winter)\n|> filter(fn: (r) =>\n r.remainder >= int(v: 14h30m) and r.remainder < int(v: 21h)\n)\n|> drop(columns: [\"remainder\"])\n|> drop(columns: [\"_start\", \"_stop\"])\n|> rename(columns: {\"_value\": \"prev_Lo\"})",
          "refId": "prevLow"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "becpny17ugz5sd"
          },
          "hide": false,
          "query": "import \"date\"\nfrom(bucket: \"tastytrade\")\n|> range(start: -3d)\n|> filter(fn: (r) =>\n r._measurement == \"CandleEvent\" and\n r.eventSymbol == \"SPX{=15m}\" and\n r.tradeTime == \"09:30\"\n)\n|> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n|> keep(columns: [\"_time\", \"high\"])\n|> rename(columns: {\"high\": \"_value\"})\n|> aggregateWindow(every: 1m, fn: last, createEmpty: true)\n|> fill(usePrevious: true)\n// Calculate time elapsed since midnight UTC in nanoseconds\n|> map(fn: (r) => ({\n r with\n remainder: int(v: r._time) - int(v: date.truncate(t: r._time, unit: 1d))\n }))\n// Filter for 14:30–21:00 UTC (9:30–16:00 EST in winter)\n|> filter(fn: (r) =>\n r.remainder >= int(v: 14h30m) and r.remainder < int(v: 21h)\n)\n|> drop(columns: [\"remainder\"])\n|> drop(columns: [\"_start\", \"_stop\"])\n|> rename(columns: {\"_value\": \"open_15mHi\"})",
          "refId": "open_15mHi"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "becpny17ugz5sd"
          },
          "hide": false,
          "query": "import \"date\"\nfrom(bucket: \"tastytrade\")\n|> range(start: -3d)\n|> filter(fn: (r) =>\n r._measurement == \"CandleEvent\" and\n r.eventSymbol == \"SPX{=15m}\" and\n r.tradeTime == \"09:30\"\n)\n|> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n|> keep(columns: [\"_time\", \"low\"])\n|> rename(columns: {\"low\": \"_value\"})\n|> aggregateWindow(every: 1m, fn: last, createEmpty: true)\n|> fill(usePrevious: true)\n// Calculate time elapsed since midnight UTC in nanoseconds\n|> map(fn: (r) => ({\n r with\n remainder: int(v: r._time) - int(v: date.truncate(t: r._time, unit: 1d))\n }))\n// Filter for 14:30–21:00 UTC (9:30–16:00 EST in winter)\n|> filter(fn: (r) =>\n r.remainder >= int(v: 14h30m) and r.remainder < int(v: 21h)\n)\n|> drop(columns: [\"remainder\"])\n|> drop(columns: [\"_start\", \"_stop\"])\n|> rename(columns: {\"_value\": \"open_15mLo\"})",
          "refId": "open_15mLo"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "becpny17ugz5sd"
          },
          "hide": false,
          "query": "import \"date\"\nfrom(bucket: \"tastytrade\")\n|> range(start: -3d)\n|> filter(fn: (r) =>\n r._measurement == \"CandleEvent\" and\n r.eventSymbol == \"SPX{=5m}\" and\n r.tradeTime == \"09:30\"\n)\n|> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n|> keep(columns: [\"_time\", \"high\"])\n|> rename(columns: {\"high\": \"_value\"})\n|> aggregateWindow(every: 1m, fn: last, createEmpty: true)\n|> fill(usePrevious: true)\n// Calculate time elapsed since midnight UTC in nanoseconds\n|> map(fn: (r) => ({\n r with\n remainder: int(v: r._time) - int(v: date.truncate(t: r._time, unit: 1d))\n }))\n// Filter for 14:30–21:00 UTC (9:30–16:00 EST in winter)\n|> filter(fn: (r) =>\n r.remainder >= int(v: 14h30m) and r.remainder < int(v: 21h)\n)\n|> drop(columns: [\"remainder\"])\n|> drop(columns: [\"_start\", \"_stop\"])\n|> rename(columns: {\"_value\": \"open_5mHi\"})",
          "refId": "Open_5mHi"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "becpny17ugz5sd"
          },
          "hide": false,
          "query": "import \"date\"\nfrom(bucket: \"tastytrade\")\n|> range(start: -3d)\n|> filter(fn: (r) =>\n r._measurement == \"CandleEvent\" and\n r.eventSymbol == \"SPX{=5m}\" and\n r.tradeTime == \"09:30\"\n)\n|> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n|> keep(columns: [\"_time\", \"low\"])\n|> rename(columns: {\"low\": \"_value\"})\n|> aggregateWindow(every: 1m, fn: last, createEmpty: true)\n|> fill(usePrevious: true)\n// Calculate time elapsed since midnight UTC in nanoseconds\n|> map(fn: (r) => ({\n r with\n remainder: int(v: r._time) - int(v: date.truncate(t: r._time, unit: 1d))\n }))\n// Filter for 14:30–21:00 UTC (9:30–16:00 EST in winter)\n|> filter(fn: (r) =>\n r.remainder >= int(v: 14h30m) and r.remainder < int(v: 21h)\n)\n|> drop(columns: [\"remainder\"])\n|> drop(columns: [\"_start\", \"_stop\"])\n|> rename(columns: {\"_value\": \"open_5mLo\"})",
          "refId": "Open_5mLo"
        }
      ],
      "title": "SPX 5min. Candle",
      "type": "candlestick"
    }
  ],
  "preload": false,
  "refresh": "5s",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "2025-02-14T14:20:00.000Z",
    "to": "2025-02-14T21:05:00.000Z"
  },
  "timepicker": {
    "refresh_intervals": [
      "1s",
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m"
    ]
  },
  "timezone": "browser",
  "title": "SPX Daily - Working",
  "uid": "bed1z8wwah8n4b",
  "version": 12,
  "weekStart": ""
}

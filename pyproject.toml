[tool.poetry]
name = "tastytrade"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{ include = "tastytrade", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.32.3"
pandas = "^2.2.3"
numpy = "^2.1.3"
jupyter = "^1.1.1"
ipython = "^8.29.0"
matplotlib = "^3.9.2"
seaborn = "^0.13.2"
types-Pillow = "^10.0.0"
types-Flask = "^1.1.6"
python-dotenv = "^1.0.1"
injector = "^0.22.0"
websockets = "^14.1"
aiohttp = "^3.11.2"
websocket = "^0.2.1"
pydantic = "^2.10.1"
polars = { extras = ["numpy", "pandas", "pyarrow"], version = "^1.16.0" }
plotly = "^6.0.0"
dash = "^2.18.2"
dash-bootstrap-components = "^1.7.1"
influxdb-client = "^1.48.0"
mypy = "^1.15.0"
uvicorn = "^0.34.0"
fastapi = "^0.115.8"
pydantic-settings = "^2.7.1"
loguru = "^0.7.3"
altair = "^5.5.0"
redis = "^5.2.1"
hiredis = "^3.1.0"
kaleido = "0.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
ruff = "^0.7.3"
mypy = "^1.13.0"
pytest-cov = "^6.0.0"
pre-commit = "^4.0.1"
pytest-mock = "^3.14.0"
pytest-asyncio = "^0.24.0"
python-dotenv = "^1.0.1"
pandas-stubs = "^2.2.3.241009"
types-requests = "^2.32.0.20241016"
types-redis = "^4.6.0.20241004"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
api = "tastytrade.api.main:start"

[tool.ruff]
line-length = 88

[tool.ruff.lint]
extend-select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # Flake8-bugbear
    "C4", # Flake8-comprehensions
]

ignore = [
    "E501",  # Line too long
    "E731",  # Lambda assignment
    "E402",
    "I001",
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "W291",  # Let formatter handle trailing whitespace
    "W293",  # Let formatter handle blank line whitespace
]

fixable = ["ALL"]
